name: Build, Test, and Emulate MY_PROJECT

on:
  push:
    branches:
      - 'main'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Build Docker image
        run: docker build -t my_project .

      # Run make to compile the project
      - name: Run make
        run: docker run --rm -v ${{ github.workspace }}:/usr/src/myapp -w /usr/src/myapp my_project make

      # Run tests
      - name: Run tests
        run: docker run --rm -v ${{ github.workspace }}:/usr/src/myapp -w /usr/src/myapp my_project make test

      # List files to verify build artifacts
      - name: List files
        run: docker run --rm -v ${{ github.workspace }}:/usr/src/myapp -w /usr/src/myapp my_project ls -l

      # Upload binary as artifact
      - name: Upload my_project.bin as artifact
        uses: actions/upload-artifact@v3
        with:
          name: my_project.bin
          path: my_project.bin

      # Emulate the firmware using QEMU
      - name: Emulate my_project.bin
        run: |
          docker run --rm -v ${{ github.workspace }}:/usr/src/myapp -w /usr/src/myapp my_project qemu-system-arm -M versatilepb -kernel my_project.bin -nographic -serial mon:stdio -audiodev none,id=dummy